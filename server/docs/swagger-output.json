{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "GitHub Trending API Documentation (OpenAPIv3)",
    "description": "This service is to check GitHub API and pull basic information about the most trending repositories using NodeJS(ExpressJS), Vue3 and MongoDB."
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000",
      "description": "API server"
    }
  ],
  "tags": [
    {
      "name": "Repositories",
      "description": "GitHub synchronization and repositories information pulling endpoints"
    }
  ],
  "paths": {
    "/api/v1/repos/sync/status": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get auto synchronization status",
        "description": "Get auto synchronization status",
        "operationId": "autoSyncStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAutoSyncStatusSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400Schema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/sync/enable": {
      "post": {
        "tags": ["Repositories"],
        "summary": "Enable auto synchronization",
        "description": "Enable auto synchronization",
        "operationId": "autoSyncEnable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAutoSyncEnableSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400Schema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/sync/disable": {
      "post": {
        "tags": ["Repositories"],
        "summary": "Disable auto synchronization",
        "description": "Disable auto synchronization",
        "operationId": "autoSyncDisable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAutoSyncDisableSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400Schema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/sync/refresh": {
      "post": {
        "tags": ["Repositories"],
        "summary": "Refresh auto synchronization timer",
        "description": "Refresh auto synchronization timer",
        "operationId": "autoSyncRefresh",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAutoSyncRefreshSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400Schema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/repos/{id}": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "IdInPath": {
        "in": "path",
        "name": "id",
        "description": "Request repository id",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "681139148550c69d9796823f"
        }
      },
      "LimitInQuery": {
        "in": "query",
        "name": "limit",
        "description": "Limit of repositories",
        "required": false,
        "default": 10,
        "schema": {
          "type": "number",
          "format": "number",
          "example": 10
        }
      },
      "OffsetInQuery": {
        "in": "query",
        "name": "offset",
        "description": "Offset of repositories",
        "required": false,
        "default": 0,
        "schema": {
          "type": "number",
          "format": "number",
          "example": 0
        }
      },
      "SortInQuery": {
        "in": "query",
        "name": "sort",
        "description": "Sort repositories by field",
        "required": false,
        "default": "stargazers_count",
        "schema": {
          "type": "string",
          "format": "string",
          "example": "stargazers_count"
        }
      },
      "OrderInQuery": {
        "in": "query",
        "name": "order",
        "description": "Order repositories by field",
        "required": false,
        "default": "-1",
        "schema": {
          "type": "string",
          "format": "string",
          "example": "-1"
        }
      },
      "QueryInQuery": {
        "in": "query",
        "name": "query",
        "description": "Query repositories by field",
        "required": false,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "smth"
        }
      }
    },
    "schemas": {
      "ResponseAutoSyncEnableSchema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Auto synchronization is enabled",
            "description": "Success message for auto sync enable"
          }
        }
      },
      "ResponseAutoSyncStatusSchema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "enabled|disabled",
            "description": "Success message if auto sync enabled or disabled"
          }
        }
      },
      "ResponseAutoSyncDisableSchema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Auto sync is disabled!",
            "description": "Success message for auto sync disable"
          }
        }
      },
      "ResponseAutoSyncRefreshSchema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Auto sync timer is refreshed!",
            "description": "Success message for auto sync refresh"
          }
        }
      },
      "ResponseGetReposListSchema": {
        "type": "object",
        "required": ["repositories", "count", "limit", "offset"],
        "properties": {
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseGetExactRepoSchema"
            }
          },
          "count": {
            "type": "number",
            "example": 10,
            "description": "Number of repositories"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "Limit of repositories"
          },
          "offset": {
            "type": "number",
            "example": 0,
            "description": "Offset of repositories"
          }
        }
      },
      "ResponseGetExactRepoSchema": {
        "type": "object",
        "required": [
          "_id",
          "full_name",
          "name",
          "git_id",
          "owner_login",
          "html_url",
          "description",
          "stargazers_count",
          "language"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "62e6e5e7b4f5e8f5e8f5e8f5",
            "description": "Repository ID"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "Repository full name"
          },
          "name": {
            "type": "string",
            "example": "Hello-World",
            "description": "Repository name"
          },
          "git_id": {
            "type": "number",
            "example": 1,
            "description": "Repository ID"
          },
          "owner_login": {
            "type": "string",
            "example": "octocat",
            "description": "Repository owner login"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World",
            "description": "Repository URL"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "description": "Repository description"
          },
          "stargazers_count": {
            "type": "number",
            "example": 1,
            "description": "Repository stargazers count"
          },
          "language": {
            "type": "string",
            "example": "JavaScript",
            "description": "Repository language"
          }
        }
      },
      "Response400Schema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request",
            "description": "Error message"
          }
        }
      },
      "Response404Schema": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Not found!",
            "description": "Error message"
          }
        }
      }
    }
  }
}
